/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import controller.MucHocPhiController;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.MucHocPhi;
import utils.ExcelExporter;

/**
 *
 * @author trung
 */
public class MucHocPhiFrame extends javax.swing.JFrame {

    DefaultTableModel mucHocPhiModel;
    MucHocPhiController mucHocPhiController;
    int selectedMucHocPhiID = -1;

    /**
     * Creates new form MucHocPhiFrame
     */
    public MucHocPhiFrame() {
        initComponents();
        mucHocPhiModel = (DefaultTableModel) MucHocPhiTbl.getModel();
        mucHocPhiController = new MucHocPhiController();
        showDanhSachMucHocPhi();
   this.setLocationRelativeTo(null);
    }

    // Hiển thị danh sách mức học phí ra bảng
    private void showDanhSachMucHocPhi() {
        List<MucHocPhi> listMucHocPhi = mucHocPhiController.getList();
        mucHocPhiModel.setRowCount(0);
        listMucHocPhi.forEach((mucHocPhi) -> {
            mucHocPhiModel.addRow(new Object[]{
                mucHocPhi.getId(),
                mucHocPhi.getMaNganh(),
                mucHocPhi.getNamHoc(),
                mucHocPhi.getSoTien(),});
        });
    }

    // Lấy thông tin mức học phí từ các trường nhập
    private MucHocPhi getMucHocPhiDataFromFields() {
        String namHocStr = mucHocPhiNamHocField.getText();
        String maNganh = mucHocPhiMaNganhField.getText();
        String soTienStr = mucHocPhiSoTienField.getText();

        if (!namHocStr.isEmpty() && !maNganh.isEmpty() && !soTienStr.isEmpty()) {
            int namHoc = Integer.parseInt(namHocStr);
            int soTien = Integer.parseInt(soTienStr);
            MucHocPhi mucHocPhi = new MucHocPhi(maNganh, namHoc, soTien);
            return mucHocPhi;
        }
        return null;
    }

    /*/**
    * Kiểm tra thông tin mức học phí Ở đây chúng ta kiểm tra xem đã tồn tại mức
    * học phí đối với ngành và năm vừa nhập hay chưa.
    */
    private boolean validateMucHocPhi(MucHocPhi mucHocPhi, boolean isEdit) {
        int namHoc = mucHocPhi.getNamHoc();
        String maNganh = mucHocPhi.getMaNganh();
        MucHocPhi mucHocPhiDb = mucHocPhiController.findByMaNganhAndNamHoc(maNganh, namHoc);
        if (mucHocPhiDb != null) {
            if (!isEdit || isEdit && mucHocPhiDb.getId() != mucHocPhi.getId()) {
                JOptionPane.showMessageDialog(this, "Đã tồn tại mức học phí với ngành và năm này. Xin hãy kiểm tra lại.");
                return false;
            }
            return true;
        }
        return true;
    }

    // Điền thông tin mức học phí vào các trường nhập (đối với edit)
    private void fillMucHocPhiFields(MucHocPhi mucHocPhi) {
        mucHocPhiNamHocField.setText(mucHocPhi.getNamHoc() + "");
        mucHocPhiMaNganhField.setText(mucHocPhi.getMaNganh());
        mucHocPhiSoTienField.setText(mucHocPhi.getSoTien() + "");
    }

    // Xóa thông tin trường nhập mức học phí
    private void clearMucHocPhiFields() {
        mucHocPhiNamHocField.setText("");
        mucHocPhiMaNganhField.setText("");
        mucHocPhiSoTienField.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        mucHocPhiMaNganhField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        mucHocPhiNamHocField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        mucHocPhiSoTienField = new javax.swing.JTextField();
        addMucHocPhiBtn = new javax.swing.JButton();
        editMucHocPhiBtn = new javax.swing.JButton();
        deleteMucHocPhiBtn = new javax.swing.JButton();
        resetMucHocPhiBtn = new javax.swing.JButton();
        exportExcelMucHocPhiBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        MucHocPhiTbl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 102));
        jLabel1.setText("Quản lí mức học phí");

        jLabel17.setText("Mã ngành");

        jLabel18.setText("Năm học");

        jLabel19.setText("Số tiền");

        addMucHocPhiBtn.setText("Thêm");
        addMucHocPhiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMucHocPhiBtnActionPerformed(evt);
            }
        });

        editMucHocPhiBtn.setText("Sửa");
        editMucHocPhiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMucHocPhiBtnActionPerformed(evt);
            }
        });

        deleteMucHocPhiBtn.setText("Xóa");
        deleteMucHocPhiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMucHocPhiBtnActionPerformed(evt);
            }
        });

        resetMucHocPhiBtn.setText("Reset");
        resetMucHocPhiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetMucHocPhiBtnActionPerformed(evt);
            }
        });

        exportExcelMucHocPhiBtn.setText("Xuất excel");
        exportExcelMucHocPhiBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportExcelMucHocPhiBtnActionPerformed(evt);
            }
        });

        MucHocPhiTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Mã ngành", "Năm học", "Số tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(MucHocPhiTbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(addMucHocPhiBtn)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(editMucHocPhiBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteMucHocPhiBtn)
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(57, 57, 57)
                        .addComponent(mucHocPhiSoTienField, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(49, 49, 49)
                        .addComponent(mucHocPhiNamHocField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(mucHocPhiMaNganhField, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))))
                .addGap(39, 39, 39)
                .addComponent(resetMucHocPhiBtn)
                .addGap(36, 36, 36)
                .addComponent(exportExcelMucHocPhiBtn)
                .addGap(111, 111, 111))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(mucHocPhiMaNganhField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(mucHocPhiNamHocField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(mucHocPhiSoTienField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMucHocPhiBtn)
                    .addComponent(editMucHocPhiBtn)
                    .addComponent(deleteMucHocPhiBtn)
                    .addComponent(resetMucHocPhiBtn)
                    .addComponent(exportExcelMucHocPhiBtn))
                .addGap(49, 49, 49)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addMucHocPhiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMucHocPhiBtnActionPerformed
        MucHocPhi mucHocPhi = getMucHocPhiDataFromFields();
        if (mucHocPhi != null) {
            if (validateMucHocPhi(mucHocPhi, false)) {
                mucHocPhiController.insert(mucHocPhi);
                showDanhSachMucHocPhi();
                clearMucHocPhiFields();
                JOptionPane.showMessageDialog(this, "Them muc hoc phi thanh cong. ");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Xin hãy điền đầy đủ thông tin mức học phí.");
        }
    }//GEN-LAST:event_addMucHocPhiBtnActionPerformed

    private void editMucHocPhiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMucHocPhiBtnActionPerformed
        if (selectedMucHocPhiID == -1) {
            int selectedIndex = MucHocPhiTbl.getSelectedRow();
            if (selectedIndex >= 0) {
                int phieuNoID = Integer.parseInt(MucHocPhiTbl.getValueAt(selectedIndex, 0).toString());
                MucHocPhi selectedMucHocPhi = mucHocPhiController.getOne(phieuNoID);
                selectedMucHocPhiID = phieuNoID;
                fillMucHocPhiFields(selectedMucHocPhi);
            } else {
                JOptionPane.showMessageDialog(this, "Xin hãy chọn hàng của múc học phí muốn sửa.");
            }
        } else {
            int option = JOptionPane.showConfirmDialog(this, "Bạn có muốn lưu lại thay đổi không? ");
            if (option == 0) {
                MucHocPhi editedMucHocPhi = getMucHocPhiDataFromFields();
                if (editedMucHocPhi != null) {
                    editedMucHocPhi.setId(selectedMucHocPhiID);
                    if (validateMucHocPhi(editedMucHocPhi, true)) {
                        mucHocPhiController.update(selectedMucHocPhiID, editedMucHocPhi);
                        selectedMucHocPhiID = -1;
                        clearMucHocPhiFields();
                        showDanhSachMucHocPhi();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Xin hãy điền đầy đủ thông tin của phiếu nợ.");
                }
            }
        }
    }//GEN-LAST:event_editMucHocPhiBtnActionPerformed

    private void deleteMucHocPhiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMucHocPhiBtnActionPerformed
        if (selectedMucHocPhiID == -1) {
            int selectedIndex = MucHocPhiTbl.getSelectedRow();
            if (selectedIndex >= 0) {
                int mucHocPhiID = Integer.parseInt(MucHocPhiTbl.getValueAt(selectedIndex, 0).toString());
                selectedMucHocPhiID = mucHocPhiID;
            } else {
                JOptionPane.showMessageDialog(this, "Xin hãy chọn hàng của mức học phí muốn xóa.");
            }
        } else {
            int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa không ? ");
            if (option == 0) {
                mucHocPhiController.delete(selectedMucHocPhiID);
                selectedMucHocPhiID = -1;
                showDanhSachMucHocPhi();
                JOptionPane.showMessageDialog(this, "Xóa thành công.");
            }
        }
    }//GEN-LAST:event_deleteMucHocPhiBtnActionPerformed

    private void resetMucHocPhiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetMucHocPhiBtnActionPerformed
        clearMucHocPhiFields();
    }//GEN-LAST:event_resetMucHocPhiBtnActionPerformed

    private void exportExcelMucHocPhiBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportExcelMucHocPhiBtnActionPerformed
        try {
            ExcelExporter.exportToExcels(MucHocPhiTbl);
        } catch (IOException ex) {
            Logger.getLogger(MucHocPhiFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exportExcelMucHocPhiBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MucHocPhiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MucHocPhiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MucHocPhiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MucHocPhiFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MucHocPhiFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable MucHocPhiTbl;
    private javax.swing.JButton addMucHocPhiBtn;
    private javax.swing.JButton deleteMucHocPhiBtn;
    private javax.swing.JButton editMucHocPhiBtn;
    private javax.swing.JButton exportExcelMucHocPhiBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField mucHocPhiMaNganhField;
    private javax.swing.JTextField mucHocPhiNamHocField;
    private javax.swing.JTextField mucHocPhiSoTienField;
    private javax.swing.JButton resetMucHocPhiBtn;
    // End of variables declaration//GEN-END:variables
}
