/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import controller.MucHocPhiController;
import controller.SinhVienController;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.MucHocPhi;
import model.SinhVien;
import utils.ExcelExporter;

public class SinhVienFrame extends javax.swing.JFrame {

    DefaultTableModel sinhVienModel;
    SinhVienController sinhVienController;
    MucHocPhiController mucHocPhiController;

    int selectedSinhVienID = -1;

    /**
     * Creates new form SinhVienFrame
     */
    public SinhVienFrame() {
        initComponents();
        sinhVienModel = (DefaultTableModel) SinhVienTbl.getModel();
        sinhVienController = new SinhVienController();
        mucHocPhiController = new MucHocPhiController();
        showDanhSachSinhVien();
       this.setLocationRelativeTo(null);
    }

    // Hiển thị danh sách sinh viên ra bảng
    private void showDanhSachSinhVien() {
        List<SinhVien> listSinhVien = sinhVienController.getList();
        sinhVienModel.setRowCount(0);
        listSinhVien.forEach((sinhVien) -> {
            sinhVienModel.addRow(new Object[]{
                sinhVien.getId(),
                sinhVien.getMaSV(),
                sinhVien.getHoTen(),
                sinhVien.getLopHoc(),
                sinhVien.getNienKhoa(),
                sinhVien.getMaNganh()
            });
        });
    }

    // Lấy thông tin sinh viên từ các ô nhập
    private SinhVien getSinhVienDataFromFields() {
        String maSV = sinhVienMaSVField.getText();
        String hoTen = sinhVienHoTenField.getText();
        String lop = sinhVienLopField.getText();
        String nienKhoa = sinhVienNienKhoaField.getText();
        String maNganh = sinhVienMaNganhField.getText();

        // Kiểm tra rỗng
        if (!maSV.isEmpty() && !hoTen.isEmpty() && !lop.isEmpty() && !nienKhoa.isEmpty() && !maNganh.isEmpty()) {
            SinhVien sv = new SinhVien(maSV, hoTen, lop, nienKhoa, maNganh);
            return sv;
        }
        return null;
    }

    // Điền thông tin sinh viên vào các ô nhập (khi edit)
    private void fillSinhVienFields(SinhVien sv) {
        sinhVienMaSVField.setText(sv.getMaSV());
        sinhVienHoTenField.setText(sv.getHoTen());
        sinhVienLopField.setText(sv.getLopHoc());
        sinhVienNienKhoaField.setText(sv.getNienKhoa());
        sinhVienMaNganhField.setText(sv.getMaNganh());
    }

    /**
     * Kiểm tra dữ liệu nhập của sinh viên. Có 2 điều kiện + Ngành học phải tồn
     * tại (đã được nhập trong phần mức học phí) + Đối với thêm mới thì không
     * được trùng mã sinh viên với sinh viên đã có trong hệ thống.
     */
    private boolean validateSinhVien(SinhVien sv, boolean isEdit) {

        // lấy ra danh sách các mức học phí đối với ngành của sinh viên.
        List<MucHocPhi> danhSachMucHocPhi = mucHocPhiController.find(sv.getMaNganh());
        if (danhSachMucHocPhi.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không tồn tại mã ngành, xin hãy kiểm tra lại.");
            return false;
        }

        // Tìm kiếm trong cơ sở dữ liệu sinh viên trùng mã sv với sinh viên hiện tại
        SinhVien svDb = sinhVienController.findByMaSV(sv.getMaSV());
        if (svDb != null) {

            // Trong trường hợp thêm mới thì fail luôn
            // Trong trường hợp sửa nếu sinh viên trong csdl có ID khác với
            // sinh viên đang sửa => fail
            if (!isEdit || isEdit && svDb.getId() != sv.getId()) {
                JOptionPane.showMessageDialog(this, "Mã sinh viên đã tồn tại.");
                return false;
            }
            return true;
        }
        return true;
    }

    // Xóa giá trị của các trường nhập sinh viên. 
    private void clearSinhVienFields() {
        sinhVienMaSVField.setText("");
        sinhVienHoTenField.setText("");
        sinhVienLopField.setText("");
        sinhVienNienKhoaField.setText("");
        sinhVienMaNganhField.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        sinhVienMaSVField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        sinhVienHoTenField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sinhVienLopField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        sinhVienMaNganhField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        sinhVienNienKhoaField = new javax.swing.JTextField();
        editStudentBtn = new javax.swing.JButton();
        deleteStudentBtn = new javax.swing.JButton();
        resetSinhVienBtn = new javax.swing.JButton();
        exportExcelSinhVienBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        SinhVienTbl = new javax.swing.JTable();
        addSinhVienBtn = new javax.swing.JButton();
        findSinhVienBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 102));
        jLabel1.setText("Quản lí sinh viên");

        jLabel2.setText("Mã sinh viên");

        jLabel3.setText("Họ tên sinh viên");

        jLabel4.setText("Lớp");

        jLabel5.setText("Mã ngành");

        jLabel6.setText("Niên khóa");

        editStudentBtn.setText("Sửa");
        editStudentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStudentBtnActionPerformed(evt);
            }
        });

        deleteStudentBtn.setText("Xóa");
        deleteStudentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStudentBtnActionPerformed(evt);
            }
        });

        resetSinhVienBtn.setText("Reset");
        resetSinhVienBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetSinhVienBtnActionPerformed(evt);
            }
        });

        exportExcelSinhVienBtn.setText("Xuất excel");
        exportExcelSinhVienBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportExcelSinhVienBtnActionPerformed(evt);
            }
        });

        SinhVienTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Mã sinh viên", "Họ tên", "Lớp", "Niên khóa", "Mã ngành"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(SinhVienTbl);

        addSinhVienBtn.setText("Thêm");
        addSinhVienBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSinhVienBtnActionPerformed(evt);
            }
        });

        findSinhVienBtn.setText("Tìm kiếm");
        findSinhVienBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findSinhVienBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addComponent(addSinhVienBtn))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(sinhVienMaSVField, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                            .addComponent(sinhVienHoTenField)
                            .addComponent(sinhVienLopField)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(editStudentBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(deleteStudentBtn)
                                .addGap(32, 32, 32)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sinhVienMaNganhField)
                                    .addComponent(sinhVienNienKhoaField, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(resetSinhVienBtn)
                                .addGap(41, 41, 41)
                                .addComponent(exportExcelSinhVienBtn)
                                .addGap(42, 42, 42)
                                .addComponent(findSinhVienBtn)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(301, 301, 301)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(sinhVienMaSVField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(sinhVienMaNganhField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sinhVienHoTenField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(sinhVienNienKhoaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(sinhVienLopField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(135, 135, 135)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addSinhVienBtn)
                            .addComponent(editStudentBtn)
                            .addComponent(deleteStudentBtn)
                            .addComponent(exportExcelSinhVienBtn)
                            .addComponent(resetSinhVienBtn)
                            .addComponent(findSinhVienBtn))))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editStudentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editStudentBtnActionPerformed
        if (selectedSinhVienID == -1) {
            int selectedIndex = SinhVienTbl.getSelectedRow();
            if (selectedIndex >= 0) {
                int sinhVienID = Integer.parseInt(SinhVienTbl.getValueAt(selectedIndex, 0).toString());
                SinhVien selectedSinhVien = sinhVienController.getOne(sinhVienID);
                selectedSinhVienID = sinhVienID;
                fillSinhVienFields(selectedSinhVien);
            } else {
                JOptionPane.showMessageDialog(this, "Xin hãy chọn hàng của sinh viên muốn sửa.");
            }
        } else {
            int option = JOptionPane.showConfirmDialog(this, "Bạn có muốn lưu lại thay đổi không? ");
            if (option == 0) {
                SinhVien editedSinhVien = getSinhVienDataFromFields();
                editedSinhVien.setId(selectedSinhVienID);
                if (editedSinhVien != null) {
                    if (validateSinhVien(editedSinhVien, true)) {
                        sinhVienController.update(selectedSinhVienID, editedSinhVien);
                        selectedSinhVienID = -1;
                        clearSinhVienFields();
                        showDanhSachSinhVien();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Xin hãy điền đầy đủ thông tin của sinh vien.");
                }
            }
        }
    }//GEN-LAST:event_editStudentBtnActionPerformed

    private void deleteStudentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStudentBtnActionPerformed
        if (selectedSinhVienID == -1) {
            int selectedIndex = SinhVienTbl.getSelectedRow();
            if (selectedIndex >= 0) {
                int sinhVienID = Integer.parseInt(SinhVienTbl.getValueAt(selectedIndex, 0).toString());
                selectedSinhVienID = sinhVienID;
            } else {
                JOptionPane.showMessageDialog(this, "Xin hãy chọn hàng của sinh viên muốn xóa.");
            }
        } else {
            int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa không? ");
            if (option == 0) {
                sinhVienController.delete(selectedSinhVienID);
                selectedSinhVienID = -1;
                showDanhSachSinhVien();
                JOptionPane.showMessageDialog(this, "Xóa thành công.");
            }
        }
    }//GEN-LAST:event_deleteStudentBtnActionPerformed

    private void addSinhVienBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSinhVienBtnActionPerformed
        SinhVien sv = getSinhVienDataFromFields();
        if (sv != null) {
            if (validateSinhVien(sv, false)) {
                sinhVienController.insert(sv);
                showDanhSachSinhVien();
                clearSinhVienFields();
                JOptionPane.showMessageDialog(this, "Thêm sinh viên thành công. ");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Xin hãy điền đầy đủ thông tin của sinh viên.");
        }
    }//GEN-LAST:event_addSinhVienBtnActionPerformed

    private void resetSinhVienBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetSinhVienBtnActionPerformed
        clearSinhVienFields();
    }//GEN-LAST:event_resetSinhVienBtnActionPerformed

    private void exportExcelSinhVienBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportExcelSinhVienBtnActionPerformed
        try {
            ExcelExporter.exportToExcels(SinhVienTbl);
        } catch (IOException ex) {
            Logger.getLogger(SinhVienFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exportExcelSinhVienBtnActionPerformed

    private void findSinhVienBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findSinhVienBtnActionPerformed
        String input = JOptionPane.showInputDialog(this, "Tìm kiếm sinh viên theo mã");
        if (input.length() > 0) {
            List<SinhVien> listSinhVien = sinhVienController.find(input);
            sinhVienModel.setRowCount(0);
            listSinhVien.forEach((sinhVien) -> {
                sinhVienModel.addRow(new Object[]{
                    sinhVien.getId(),
                    sinhVien.getMaSV(),
                    sinhVien.getHoTen(),
                    sinhVien.getLopHoc(),
                    sinhVien.getNienKhoa(),
                    sinhVien.getMaNganh()
                });
            });
        } else {
            showDanhSachSinhVien();
        }
    }//GEN-LAST:event_findSinhVienBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SinhVienFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SinhVienFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SinhVienFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SinhVienFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SinhVienFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable SinhVienTbl;
    private javax.swing.JButton addSinhVienBtn;
    private javax.swing.JButton deleteStudentBtn;
    private javax.swing.JButton editStudentBtn;
    private javax.swing.JButton exportExcelSinhVienBtn;
    private javax.swing.JButton findSinhVienBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton resetSinhVienBtn;
    private javax.swing.JTextField sinhVienHoTenField;
    private javax.swing.JTextField sinhVienLopField;
    private javax.swing.JTextField sinhVienMaNganhField;
    private javax.swing.JTextField sinhVienMaSVField;
    private javax.swing.JTextField sinhVienNienKhoaField;
    // End of variables declaration//GEN-END:variables
}
