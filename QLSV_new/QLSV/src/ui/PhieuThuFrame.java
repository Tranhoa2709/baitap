/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import controller.PhieuThuController;
import controller.SinhVienController;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.PhieuNo;
import model.PhieuThu;
import model.SinhVien;
import utils.ExcelExporter;

public class PhieuThuFrame extends javax.swing.JFrame {

    DefaultTableModel phieuThuModel;

    PhieuThuController phieuThuController;
    SinhVienController sinhVienController;

    int selectedPhieuThuID = -1;

    /**
     * Creates new form PhieuThuFrame
     */
    public PhieuThuFrame() {
        initComponents();
        phieuThuModel = (DefaultTableModel) PhieuThuTbl.getModel();

        sinhVienController = new SinhVienController();
        phieuThuController = new PhieuThuController();
        showDanhSachPhieuThu();
       this.setLocationRelativeTo(null);
    }

    // Hiển thị danh sách phiếu thu ra bảng
    private void showDanhSachPhieuThu() {
        List<PhieuThu> listThuHocPhi = phieuThuController.getList();
        phieuThuModel.setRowCount(0);
        listThuHocPhi.forEach((thuHocPhi) -> {
            phieuThuModel.addRow(new Object[]{
                thuHocPhi.getId(),
                thuHocPhi.getMaSV(),
                thuHocPhi.getNamHoc(),
                thuHocPhi.getKiHocDong(),
                thuHocPhi.getNgayThuTien(),
                thuHocPhi.getNguoiThuTien(),
                thuHocPhi.getSoTienDong()
            });
        });
    }

    // Lấy thông tin phiếu thu từ các ô nhập.
    private PhieuThu getPhieuThuDataFromFields() {
        String maSV = phieuThuMaSVField.getText();
        String kiHocSTr = phieuThuKiHocField.getText();
        String namHocStr = phieuThuNamHocField.getText();
        String ngayThuTien = phieuThuNgayThuTienField.getText();
        String nguoiThuTien = phieuThuNguoiThuTienField.getText();
        String soTienDongStr = phieuThuSoTienDongField.getText();

        // Kiểm tra rỗng.
        if (!maSV.isEmpty() && !kiHocSTr.isEmpty() && !namHocStr.isEmpty() && !ngayThuTien.isEmpty()
                && !nguoiThuTien.isEmpty() && !soTienDongStr.isEmpty()) {
            int kiHoc = Integer.parseInt(kiHocSTr);
            int namHoc = Integer.parseInt(namHocStr);
            int soTienDong = Integer.parseInt(soTienDongStr);
            PhieuThu thuHocPhi = new PhieuThu(maSV, kiHoc, namHoc, ngayThuTien, nguoiThuTien, soTienDong);
            return thuHocPhi;
        }
        return null;
    }

    /**
     * Kiểm tra thông tin phiếu thu nhập Ở đây chúng ta chỉ kiểm tra xem có tồn
     * tại sinh viên này trong hệ thống hay không.
     */
    private boolean validatePhieuThu(PhieuThu thuHocPhi) {
        SinhVien sv = sinhVienController.findByMaSV(thuHocPhi.getMaSV());
        if (sv == null) {
            JOptionPane.showMessageDialog(this, "Không tồn tại sinh viên này. Xin hãy kiểm tra lại.");
            return false;
        }
        return true;
    }

    // Điền thông tin phiếu thu vào các ô nhập (đối với edit)
    private void fillPhieuThuFields(PhieuThu thuHocPhi) {
        phieuThuMaSVField.setText(thuHocPhi.getMaSV());
        phieuThuKiHocField.setText(thuHocPhi.getKiHocDong() + "");
        phieuThuNamHocField.setText(thuHocPhi.getNamHoc() + "");
        phieuThuNgayThuTienField.setText(thuHocPhi.getNgayThuTien());
        phieuThuNguoiThuTienField.setText(thuHocPhi.getNguoiThuTien());
        phieuThuSoTienDongField.setText(thuHocPhi.getSoTienDong() + "");
    }

    // Xóa thông tin ở các trường nhập phiếu thu
    private void clearPhieuThuiFields() {
        phieuThuMaSVField.setText("");
        phieuThuKiHocField.setText("");
        phieuThuNamHocField.setText("");
        phieuThuNgayThuTienField.setText("");
        phieuThuNguoiThuTienField.setText("");
        phieuThuSoTienDongField.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        phieuThuMaSVField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        phieuThuKiHocField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        phieuThuNamHocField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        phieuThuNgayThuTienField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        phieuThuSoTienDongField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        phieuThuNguoiThuTienField = new javax.swing.JTextField();
        addPhieuThuBtn = new javax.swing.JButton();
        editPhieuThuBtn = new javax.swing.JButton();
        deletePhieuThuBtn = new javax.swing.JButton();
        resetPhieuThuBtn = new javax.swing.JButton();
        exportExcelPhieuThuBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        PhieuThuTbl = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Quản lí thu tiền");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel7.setText("Mã Sinh viên");

        jLabel8.setText("Kì học đóng");

        jLabel9.setText("Năm học");

        jLabel10.setText("Ngày thu tiền");

        jLabel11.setText("Số tiền đóng");

        jLabel12.setText("Người thu tiền");

        addPhieuThuBtn.setText("Thêm mới");
        addPhieuThuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPhieuThuBtnActionPerformed(evt);
            }
        });

        editPhieuThuBtn.setText("Sửa");
        editPhieuThuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPhieuThuBtnActionPerformed(evt);
            }
        });

        deletePhieuThuBtn.setText("Xóa");
        deletePhieuThuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePhieuThuBtnActionPerformed(evt);
            }
        });

        resetPhieuThuBtn.setText("Reset");
        resetPhieuThuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetPhieuThuBtnActionPerformed(evt);
            }
        });

        exportExcelPhieuThuBtn.setText("Xuất Excel");
        exportExcelPhieuThuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportExcelPhieuThuBtnActionPerformed(evt);
            }
        });

        PhieuThuTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Mã sinh viên", "Kì học đóng", "Năm học", "Ngày thu tiền", "Người thu tiền", "Số tiền đóng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(PhieuThuTbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(23, 23, 23)
                        .addComponent(phieuThuKiHocField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(phieuThuMaSVField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phieuThuNamHocField)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addPhieuThuBtn)
                                .addGap(54, 54, 54)
                                .addComponent(editPhieuThuBtn)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phieuThuSoTienDongField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phieuThuNgayThuTienField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(deletePhieuThuBtn))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(phieuThuNguoiThuTienField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(resetPhieuThuBtn)
                                .addGap(38, 38, 38)
                                .addComponent(exportExcelPhieuThuBtn)))))
                .addGap(81, 81, 81))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(phieuThuMaSVField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(phieuThuNgayThuTienField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(phieuThuKiHocField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(phieuThuSoTienDongField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(phieuThuNamHocField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(phieuThuNguoiThuTienField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addPhieuThuBtn)
                    .addComponent(editPhieuThuBtn)
                    .addComponent(deletePhieuThuBtn)
                    .addComponent(resetPhieuThuBtn)
                    .addComponent(exportExcelPhieuThuBtn))
                .addGap(45, 45, 45)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(138, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addPhieuThuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPhieuThuBtnActionPerformed
        PhieuThu thuHocPhi = getPhieuThuDataFromFields();
        if (thuHocPhi != null) {
            if (validatePhieuThu(thuHocPhi)) {
                phieuThuController.insert(thuHocPhi);
                showDanhSachPhieuThu();
                clearPhieuThuiFields();
                JOptionPane.showMessageDialog(this, "Thêm phiếu thu thành công. ");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Xin hãy điền đầy đủ thông tin phiếu thu.");
        }
    }//GEN-LAST:event_addPhieuThuBtnActionPerformed

    private void editPhieuThuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPhieuThuBtnActionPerformed
        // Sự kiện của nút sửa sẽ gồm 2 phần.
        // Lần đầu bấm sẽ lấy dữ liệu của hàng đang chọn để điền lên các ô nhập
        // Lần thứ 2 bấm sẽ là thực hiện sự kiện "sửa" cập nhật vào cơ sở dữ liệu
        // selectedPhieuThuID dùng để đánh dấu xem đây là lần bấm vào nút "sửa"
        // thứ mấy. Nếu là -1 tức là đây là lần bấm đầu tiên -> điền dữ liệu
        // nếu khác -1 -> đây là lần nhập thứ 2 -> update vào cơ sở dữ liệu

        if (selectedPhieuThuID == -1) {
            int selectedIndex = PhieuThuTbl.getSelectedRow();
            if (selectedIndex >= 0) {
                int thuHocPhiID = Integer.parseInt(PhieuThuTbl.getValueAt(selectedIndex, 0).toString());
                PhieuThu selectedThuHocPhi = phieuThuController.getOne(thuHocPhiID);
                selectedPhieuThuID = thuHocPhiID;
                fillPhieuThuFields(selectedThuHocPhi);
            } else {
                JOptionPane.showMessageDialog(this, "Xin hãy chọn hàng của phiếu thu muốn sửa.");
            }
        } else {
            int option = JOptionPane.showConfirmDialog(this, "Bạn có muốn lưu lại thay đổi không? ");
            if (option == 0) {
                PhieuThu editedThuHocPhi = getPhieuThuDataFromFields();
                if (editedThuHocPhi != null) {
                    if (validatePhieuThu(editedThuHocPhi)) {
                        phieuThuController.update(selectedPhieuThuID, editedThuHocPhi);
                        selectedPhieuThuID = -1;
                        clearPhieuThuiFields();
                        showDanhSachPhieuThu();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Xin hãy điền đầy đủ thông tin phiếu thu.");
                }
            }
        }
    }//GEN-LAST:event_editPhieuThuBtnActionPerformed

    private void deletePhieuThuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePhieuThuBtnActionPerformed
        if (selectedPhieuThuID == -1) {
            int selectedIndex = PhieuThuTbl.getSelectedRow();
            if (selectedIndex >= 0) {
                int thuHocPhiID = Integer.parseInt(PhieuThuTbl.getValueAt(selectedIndex, 0).toString());
                selectedPhieuThuID = thuHocPhiID;
            } else {
                JOptionPane.showMessageDialog(this, "Xin hãy chọn hàng của phiếu thu muốn sửa.");
            }
        } else {
            int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa không ? ");
            if (option == 0) {
                phieuThuController.delete(selectedPhieuThuID);
                selectedPhieuThuID = -1;
                showDanhSachPhieuThu();
                JOptionPane.showMessageDialog(this, "Xóa thành công.");
            }
        }
    }//GEN-LAST:event_deletePhieuThuBtnActionPerformed

    private void resetPhieuThuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetPhieuThuBtnActionPerformed
        clearPhieuThuiFields();
    }//GEN-LAST:event_resetPhieuThuBtnActionPerformed

    private void exportExcelPhieuThuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportExcelPhieuThuBtnActionPerformed
        try {
            ExcelExporter.exportToExcels(PhieuThuTbl);
        } catch (IOException ex) {
            Logger.getLogger(PhieuThuFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_exportExcelPhieuThuBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PhieuThuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PhieuThuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PhieuThuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PhieuThuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PhieuThuFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PhieuThuTbl;
    private javax.swing.JButton addPhieuThuBtn;
    private javax.swing.JButton deletePhieuThuBtn;
    private javax.swing.JButton editPhieuThuBtn;
    private javax.swing.JButton exportExcelPhieuThuBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField phieuThuKiHocField;
    private javax.swing.JTextField phieuThuMaSVField;
    private javax.swing.JTextField phieuThuNamHocField;
    private javax.swing.JTextField phieuThuNgayThuTienField;
    private javax.swing.JTextField phieuThuNguoiThuTienField;
    private javax.swing.JTextField phieuThuSoTienDongField;
    private javax.swing.JButton resetPhieuThuBtn;
    // End of variables declaration//GEN-END:variables
}
